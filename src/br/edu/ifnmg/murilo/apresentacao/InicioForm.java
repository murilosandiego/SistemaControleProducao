/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.murilo.apresentacao;

import br.edu.ifnmg.murilo.entidade.FuncionarioTarefaProducao;
import br.edu.ifnmg.murilo.entidade.Producao;
import br.edu.ifnmg.murilo.entidade.Usuario;
import br.edu.ifnmg.murilo.negocio.FuncionarioTarefaProducaoBO;
import br.edu.ifnmg.murilo.negocio.ProducaoBO;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author murilo
 */
public class InicioForm extends javax.swing.JFrame {

    private ConsultarFornecedoresForm consultaFornecedoresForm;
    private CadastroFornecedorForm cadastroFornecedorForm;
    private CadastroTijoloForm cadastroTijoloForm;
    private ConsultarTijoloForm consultarTijoloForm;
    private CadastroFuncionarioForm cadastroFuncionarioForm;
    private ConsultarFuncionariosForm consultarFuncionariosForm;
    private CadastroTarefaForm cadastroNovaTarefaForm;
    private TelaProducaoForm telaProducaoForm;
    private ConsultarProducaoForm consultarProducaoForm;
    private CadastroUsuarioForm cadastroUsuarioForm;
    private Usuario usuario;
    private TelaLoginForm telaLoginForm;
    private CadastrosExtraForm cadastrosExtraForm;
    private ConsultarTarefasForm consultarTaresfaForm;
    private ConsultarUsuarioForm consultarUsuarioForm;
    private boolean flagTelaTijoloAtiva = false;

    /**
     * Creates new form InicioForm
     */
    public InicioForm() {

    }

    InicioForm(Usuario usuario) {
        this.usuario = usuario;
        this.preparaTela();

    }

    private void preparaTela() {
        try {
            this.initComponents();
            this.mnuLogin.setText(usuario.getNome());
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Cadastro de Tarefas", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jdpAreaDeTrabalho = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuCadastros = new javax.swing.JMenu();
        mnuFornecedor = new javax.swing.JMenu();
        itemNovoFornecedor = new javax.swing.JMenuItem();
        itemConsultarFornecedores = new javax.swing.JMenuItem();
        mnuTijolo = new javax.swing.JMenu();
        itemNovoTijolo = new javax.swing.JMenuItem();
        itemConsulta = new javax.swing.JMenuItem();
        mnuFuncionario = new javax.swing.JMenu();
        itemNovoFuncionario = new javax.swing.JMenuItem();
        itemConsultarFuncionario = new javax.swing.JMenuItem();
        mnuTarefa = new javax.swing.JMenu();
        itemNovaTarefa = new javax.swing.JMenuItem();
        itemConsultarTarefa = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itemNovoUsuario = new javax.swing.JMenuItem();
        itemConsultarUsuario = new javax.swing.JMenuItem();
        mnuOutros = new javax.swing.JMenu();
        itemGastosExtras = new javax.swing.JMenuItem();
        mnuProducao = new javax.swing.JMenu();
        ItemNovaTeste = new javax.swing.JMenuItem();
        itemConultarProducao = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        itemRelatorioGastoTotal = new javax.swing.JMenuItem();
        itemExibirGastosDetalhados = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        exibirSalarioFuncionarios = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        itemRelatorioAgua = new javax.swing.JMenuItem();
        itemGraficoEletricidade = new javax.swing.JMenuItem();
        itemGraficoBarro = new javax.swing.JMenuItem();
        itemGraficoLenha = new javax.swing.JMenuItem();
        itemGraficoFuncionarios = new javax.swing.JMenuItem();
        itemGraficoGastoExtra = new javax.swing.JMenuItem();
        mnuLogin = new javax.swing.JMenu();
        itemMenuSair = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Controle de Produção");
        setExtendedState(6);

        mnuCadastros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/application_form_add.png"))); // NOI18N
        mnuCadastros.setText("Cadastros");
        mnuCadastros.setPreferredSize(new java.awt.Dimension(100, 20));

        mnuFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/group.png"))); // NOI18N
        mnuFornecedor.setText("Fornecedor");

        itemNovoFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        itemNovoFornecedor.setText("Novo");
        itemNovoFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNovoFornecedorActionPerformed(evt);
            }
        });
        mnuFornecedor.add(itemNovoFornecedor);

        itemConsultarFornecedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/zoom.png"))); // NOI18N
        itemConsultarFornecedores.setText("Consultar");
        itemConsultarFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarFornecedoresActionPerformed(evt);
            }
        });
        mnuFornecedor.add(itemConsultarFornecedores);

        mnuCadastros.add(mnuFornecedor);

        mnuTijolo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/package.png"))); // NOI18N
        mnuTijolo.setText("Tijolo");

        itemNovoTijolo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        itemNovoTijolo.setText("Novo");
        itemNovoTijolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNovoTijoloActionPerformed(evt);
            }
        });
        mnuTijolo.add(itemNovoTijolo);

        itemConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/zoom.png"))); // NOI18N
        itemConsulta.setText("Consultar");
        itemConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultaActionPerformed(evt);
            }
        });
        mnuTijolo.add(itemConsulta);

        mnuCadastros.add(mnuTijolo);

        mnuFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/group_key.png"))); // NOI18N
        mnuFuncionario.setText("Funcionário");

        itemNovoFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        itemNovoFuncionario.setText("Novo");
        itemNovoFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNovoFuncionarioActionPerformed(evt);
            }
        });
        mnuFuncionario.add(itemNovoFuncionario);

        itemConsultarFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/zoom.png"))); // NOI18N
        itemConsultarFuncionario.setText("Consultar");
        itemConsultarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarFuncionarioActionPerformed(evt);
            }
        });
        mnuFuncionario.add(itemConsultarFuncionario);

        mnuCadastros.add(mnuFuncionario);

        mnuTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/page_paste.png"))); // NOI18N
        mnuTarefa.setText("Tarefa");

        itemNovaTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        itemNovaTarefa.setText("Nova");
        itemNovaTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNovaTarefaActionPerformed(evt);
            }
        });
        mnuTarefa.add(itemNovaTarefa);

        itemConsultarTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/zoom.png"))); // NOI18N
        itemConsultarTarefa.setText("Consultar");
        itemConsultarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarTarefaActionPerformed(evt);
            }
        });
        mnuTarefa.add(itemConsultarTarefa);

        mnuCadastros.add(mnuTarefa);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/user.png"))); // NOI18N
        jMenu1.setText("Usuario");

        itemNovoUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        itemNovoUsuario.setText("Novo");
        itemNovoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNovoUsuarioActionPerformed(evt);
            }
        });
        jMenu1.add(itemNovoUsuario);

        itemConsultarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/zoom.png"))); // NOI18N
        itemConsultarUsuario.setText("Consultar");
        itemConsultarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarUsuarioActionPerformed(evt);
            }
        });
        jMenu1.add(itemConsultarUsuario);

        mnuCadastros.add(jMenu1);

        mnuOutros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/contas16x16.png"))); // NOI18N
        mnuOutros.setText("Outros");

        itemGastosExtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/coins.png"))); // NOI18N
        itemGastosExtras.setText("Gastos Extras");
        itemGastosExtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGastosExtrasActionPerformed(evt);
            }
        });
        mnuOutros.add(itemGastosExtras);

        mnuCadastros.add(mnuOutros);

        jMenuBar1.add(mnuCadastros);

        mnuProducao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/money.png"))); // NOI18N
        mnuProducao.setText("Produção");
        mnuProducao.setPreferredSize(new java.awt.Dimension(100, 20));

        ItemNovaTeste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        ItemNovaTeste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        ItemNovaTeste.setText("Nova Produção");
        ItemNovaTeste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemNovaTesteActionPerformed(evt);
            }
        });
        mnuProducao.add(ItemNovaTeste);

        itemConultarProducao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        itemConultarProducao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/zoom.png"))); // NOI18N
        itemConultarProducao.setText("Consultar");
        itemConultarProducao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConultarProducaoActionPerformed(evt);
            }
        });
        mnuProducao.add(itemConultarProducao);

        jMenuBar1.add(mnuProducao);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/page_white_acrobat.png"))); // NOI18N
        jMenu4.setText("Relatórios");
        jMenu4.setPreferredSize(new java.awt.Dimension(100, 20));

        itemRelatorioGastoTotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/page_white_acrobat.png"))); // NOI18N
        itemRelatorioGastoTotal.setText("Produção");
        itemRelatorioGastoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRelatorioGastoTotalActionPerformed(evt);
            }
        });
        jMenu4.add(itemRelatorioGastoTotal);

        itemExibirGastosDetalhados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_bar.png"))); // NOI18N
        itemExibirGastosDetalhados.setText("Gastos Detalhados");
        itemExibirGastosDetalhados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExibirGastosDetalhadosActionPerformed(evt);
            }
        });
        jMenu4.add(itemExibirGastosDetalhados);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/page_white_text.png"))); // NOI18N
        jMenuItem3.setText("Produção por Funcionário");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        exibirSalarioFuncionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/page_white_text.png"))); // NOI18N
        exibirSalarioFuncionarios.setText("Salários Funcionários por mês");
        exibirSalarioFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exibirSalarioFuncionariosActionPerformed(evt);
            }
        });
        jMenu4.add(exibirSalarioFuncionarios);

        jMenuBar1.add(jMenu4);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_bar.png"))); // NOI18N
        jMenu5.setText("Gráficos");
        jMenu5.setPreferredSize(new java.awt.Dimension(100, 20));

        itemRelatorioAgua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_line_add.png"))); // NOI18N
        itemRelatorioAgua.setText("Gastos com Água");
        itemRelatorioAgua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRelatorioAguaActionPerformed(evt);
            }
        });
        jMenu5.add(itemRelatorioAgua);

        itemGraficoEletricidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_line_add.png"))); // NOI18N
        itemGraficoEletricidade.setText("Gastos com Eletricidade");
        itemGraficoEletricidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGraficoEletricidadeActionPerformed(evt);
            }
        });
        jMenu5.add(itemGraficoEletricidade);

        itemGraficoBarro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_line_add.png"))); // NOI18N
        itemGraficoBarro.setText("Gastos com Barro");
        itemGraficoBarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGraficoBarroActionPerformed(evt);
            }
        });
        jMenu5.add(itemGraficoBarro);

        itemGraficoLenha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_line_add.png"))); // NOI18N
        itemGraficoLenha.setText("Gastos com Lenha");
        itemGraficoLenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGraficoLenhaActionPerformed(evt);
            }
        });
        jMenu5.add(itemGraficoLenha);

        itemGraficoFuncionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_line_add.png"))); // NOI18N
        itemGraficoFuncionarios.setText("Gastos com Funcionários");
        itemGraficoFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGraficoFuncionariosActionPerformed(evt);
            }
        });
        jMenu5.add(itemGraficoFuncionarios);

        itemGraficoGastoExtra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/chart_line_add.png"))); // NOI18N
        itemGraficoGastoExtra.setText("Gastos Extras");
        itemGraficoGastoExtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGraficoGastoExtraActionPerformed(evt);
            }
        });
        jMenu5.add(itemGraficoGastoExtra);

        jMenuBar1.add(jMenu5);

        mnuLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/status_online.png"))); // NOI18N
        mnuLogin.setText("usuario");
        mnuLogin.setPreferredSize(new java.awt.Dimension(200, 20));

        itemMenuSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/arrow_left.png"))); // NOI18N
        itemMenuSair.setText("Sair");
        itemMenuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuSairActionPerformed(evt);
            }
        });
        mnuLogin.add(itemMenuSair);

        jMenuBar1.add(mnuLogin);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jdpAreaDeTrabalho, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jdpAreaDeTrabalho, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemConsultarFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarFornecedoresActionPerformed

        // TODO add your handling code here:
        if (consultaFornecedoresForm == null || consultaFornecedoresForm.isClosed()) {
            try {

                consultaFornecedoresForm = new ConsultarFornecedoresForm();
                jdpAreaDeTrabalho.add(consultaFornecedoresForm);
                consultaFornecedoresForm.setMaximum(true);
                consultaFornecedoresForm.setVisible(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            consultaFornecedoresForm.setVisible(true);
            consultaFornecedoresForm.toFront();
        }

    }//GEN-LAST:event_itemConsultarFornecedoresActionPerformed

    private void itemConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultaActionPerformed
        // TODO add your handling code here:
        if (consultarTijoloForm == null || consultarTijoloForm.isClosed()) {
            try {

                consultarTijoloForm = new ConsultarTijoloForm();
                jdpAreaDeTrabalho.add(consultarTijoloForm);
                consultarTijoloForm.setMaximum(true);
                consultarTijoloForm.setVisible(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            consultarTijoloForm.setVisible(true);
            consultarTijoloForm.toFront();
        }

    }//GEN-LAST:event_itemConsultaActionPerformed

    private void itemNovoFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNovoFuncionarioActionPerformed
        // TODO add your handling code here:
        if (cadastroFuncionarioForm == null) {
            cadastroFuncionarioForm = new CadastroFuncionarioForm();
        }
        cadastroFuncionarioForm.setVisible(true);
        cadastroFuncionarioForm.toFront();
    }//GEN-LAST:event_itemNovoFuncionarioActionPerformed

    private void itemConsultarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarFuncionarioActionPerformed
        // TODO add your handling code here:

        if (consultarFuncionariosForm == null || consultarFuncionariosForm.isClosed()) {
            try {

                consultarFuncionariosForm = new ConsultarFuncionariosForm();
                jdpAreaDeTrabalho.add(consultarFuncionariosForm);
                consultarFuncionariosForm.setMaximum(true);
                consultarFuncionariosForm.setVisible(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            consultarFuncionariosForm.setVisible(true);
            consultarFuncionariosForm.toFront();
        }

    }//GEN-LAST:event_itemConsultarFuncionarioActionPerformed

    private void itemNovaTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNovaTarefaActionPerformed
        if (cadastroNovaTarefaForm == null) {
            cadastroNovaTarefaForm = new CadastroTarefaForm();
            cadastroNovaTarefaForm.setVisible(true);
            cadastroNovaTarefaForm.toFront();
            
        }

    }//GEN-LAST:event_itemNovaTarefaActionPerformed

    private void ItemNovaTesteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemNovaTesteActionPerformed
            
        if (telaProducaoForm == null || telaProducaoForm.isClosed()) {
            try {

                telaProducaoForm = new TelaProducaoForm();
                jdpAreaDeTrabalho.add(telaProducaoForm);
                telaProducaoForm.setMaximum(true);
                telaProducaoForm.setVisible(true);
                telaProducaoForm.isEnabled();
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            telaProducaoForm.setVisible(true);
            telaProducaoForm.toFront();
        }
    }//GEN-LAST:event_ItemNovaTesteActionPerformed

    private void itemConultarProducaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConultarProducaoActionPerformed
        if (consultarProducaoForm == null || consultarProducaoForm.isClosed()) {
            try {

                consultarProducaoForm = new ConsultarProducaoForm();
                jdpAreaDeTrabalho.add(consultarProducaoForm);
                consultarProducaoForm.setMaximum(true);
                consultarProducaoForm.setVisible(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            consultarProducaoForm.setVisible(true);
            consultarProducaoForm.toFront();
        }
    }//GEN-LAST:event_itemConultarProducaoActionPerformed

    private void itemNovoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNovoUsuarioActionPerformed
        if (cadastroUsuarioForm == null) {
            cadastroUsuarioForm = new CadastroUsuarioForm();
        }
        cadastroUsuarioForm.setVisible(true);
        cadastroUsuarioForm.toFront();

    }//GEN-LAST:event_itemNovoUsuarioActionPerformed

    private void itemMenuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuSairActionPerformed
        this.dispose();
        if (telaLoginForm == null) {
            telaLoginForm = new TelaLoginForm();
        }
        telaLoginForm.setVisible(true);
        telaLoginForm.toFront();
    }//GEN-LAST:event_itemMenuSairActionPerformed

    private void itemGastosExtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGastosExtrasActionPerformed
        if (cadastrosExtraForm == null) {
            cadastrosExtraForm = new CadastrosExtraForm();
        }
        cadastrosExtraForm.setVisible(true);
        cadastrosExtraForm.toFront();

    }//GEN-LAST:event_itemGastosExtrasActionPerformed

    private void itemRelatorioGastoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRelatorioGastoTotalActionPerformed
        try {
            this.exibirRelatorioGastoTotal();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemRelatorioGastoTotalActionPerformed

    private void itemExibirGastosDetalhadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExibirGastosDetalhadosActionPerformed
        try {
            this.exibirRelatorioGastosDetalhados();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemExibirGastosDetalhadosActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            this.exibirRelatorioProducaoPorFuncionario();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void itemConsultarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarTarefaActionPerformed
        if (consultarTaresfaForm == null || consultarTaresfaForm.isClosed()) {
            try {

                consultarTaresfaForm = new ConsultarTarefasForm();
                jdpAreaDeTrabalho.add(consultarTaresfaForm);
                consultarTaresfaForm.setMaximum(true);
                consultarTaresfaForm.setVisible(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            consultarTaresfaForm.setVisible(true);
            consultarTaresfaForm.toFront();
        }
    }//GEN-LAST:event_itemConsultarTarefaActionPerformed

    private void itemConsultarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarUsuarioActionPerformed
        if (consultarUsuarioForm == null || consultarUsuarioForm.isClosed()) {
            try {

                consultarUsuarioForm = new ConsultarUsuarioForm();
                jdpAreaDeTrabalho.add(consultarUsuarioForm);
                consultarUsuarioForm.setMaximum(true);
                consultarUsuarioForm.setVisible(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            consultarUsuarioForm.setVisible(true);
            consultarUsuarioForm.toFront();
        }
    }//GEN-LAST:event_itemConsultarUsuarioActionPerformed

    private void itemRelatorioAguaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRelatorioAguaActionPerformed
        try {
            this.exibirRelatorioGastoAgua();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemRelatorioAguaActionPerformed

    private void itemGraficoEletricidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGraficoEletricidadeActionPerformed
        try {
            this.exibirRelatorioGastoEletricidade();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemGraficoEletricidadeActionPerformed

    private void itemGraficoBarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGraficoBarroActionPerformed
        try {
            this.exibirRelatorioGastosBarro();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemGraficoBarroActionPerformed

    private void itemGraficoLenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGraficoLenhaActionPerformed
        try {
            this.exibirRelatorioGastoLenha();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemGraficoLenhaActionPerformed

    private void itemGraficoFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGraficoFuncionariosActionPerformed
        try {
            this.exibirRelatorioGastoFuncionario();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemGraficoFuncionariosActionPerformed

    private void itemGraficoGastoExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGraficoGastoExtraActionPerformed
        try {
            this.exibirRelatorioGastoExtras();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemGraficoGastoExtraActionPerformed

    private void itemSalarioFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalarioFuncionariosActionPerformed
        
    }//GEN-LAST:event_itemSalarioFuncionariosActionPerformed

    private void exibirSalarioFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exibirSalarioFuncionariosActionPerformed
        try {
            this.exibirRelatorioSalarioFuncionarioPorMes();
        } catch (SQLException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exibirSalarioFuncionariosActionPerformed

    private void itemNovoFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNovoFornecedorActionPerformed
        // TODO add your handling code here:
        if (cadastroFornecedorForm == null) {
            cadastroFornecedorForm = new CadastroFornecedorForm();
        }
        cadastroFornecedorForm.setVisible(true);
        cadastroFornecedorForm.toFront();

    }//GEN-LAST:event_itemNovoFornecedorActionPerformed

    private void itemNovoTijoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNovoTijoloActionPerformed
        // TODO add your handling code here:

        if (cadastroTijoloForm == null) {
            cadastroTijoloForm = new CadastroTijoloForm();
        }
        cadastroTijoloForm.setVisible(true);
        cadastroTijoloForm.toFront();
        this.flagTelaTijoloAtiva = true;
    }//GEN-LAST:event_itemNovoTijoloActionPerformed

     
    private void exibirRelatorioGastoTotal() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarTodos();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/relatorioValorDeVendaELucro.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Relatório de Produções");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(ConsultarProducaoForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void exibirRelatorioGastosDetalhados() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/relatorioGastosDetalhados.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Relatório de Gastos Detalhados");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void exibirRelatorioGastoAgua() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/graficoGastosAgua.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de gastos com Água");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void exibirRelatorioGastoFuncionario() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/graficoGastoFuncionario.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de gastos com Funcionários");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void exibirRelatorioGastoLenha() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/graficoGastoLenha.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de gastos com Lenha");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void exibirRelatorioGastoExtras() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/graficoGastoExtras.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de gastos Extras");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void exibirRelatorioGastoEletricidade() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/graficoGastoEletricidade.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de gastos com Eletricidade");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void exibirRelatorioGastosBarro() throws SQLException {
        List<Producao> producoes = new ArrayList<>();

        ProducaoBO producaoBO = new ProducaoBO();
        producoes = producaoBO.buscarValorFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/graficoGastoBarro.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(producoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Gráfico de gastos com Barro");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void exibirRelatorioProducaoPorFuncionario() throws SQLException {
        List<FuncionarioTarefaProducao> funcionarioTarefaProducoes;

        FuncionarioTarefaProducaoBO funcionarioTarefaProducaoBO = new FuncionarioTarefaProducaoBO();
        funcionarioTarefaProducoes = funcionarioTarefaProducaoBO.buscarFuncionarioPorProducao();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/relatorioFunciorioPorProducao.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(funcionarioTarefaProducoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Relatório produção por Funcionario");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void exibirRelatorioSalarioFuncionarioPorMes() throws SQLException {
        List<FuncionarioTarefaProducao> funcionarioTarefaProducoes;

        FuncionarioTarefaProducaoBO funcionarioTarefaProducaoBO = new FuncionarioTarefaProducaoBO();
        funcionarioTarefaProducoes = funcionarioTarefaProducaoBO.buscarSalarioFuncionarioPorMes();

        try {

            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/relatorios/relatorioSalarioFuncionarioPorMes.jasper";

            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(funcionarioTarefaProducoes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Relatório salário de funcionários por mês");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ItemNovaTeste;
    private javax.swing.JMenuItem exibirSalarioFuncionarios;
    private javax.swing.JMenuItem itemConsulta;
    private javax.swing.JMenuItem itemConsultarFornecedores;
    private javax.swing.JMenuItem itemConsultarFuncionario;
    private javax.swing.JMenuItem itemConsultarTarefa;
    private javax.swing.JMenuItem itemConsultarUsuario;
    private javax.swing.JMenuItem itemConultarProducao;
    private javax.swing.JMenuItem itemExibirGastosDetalhados;
    private javax.swing.JMenuItem itemGastosExtras;
    private javax.swing.JMenuItem itemGraficoBarro;
    private javax.swing.JMenuItem itemGraficoEletricidade;
    private javax.swing.JMenuItem itemGraficoFuncionarios;
    private javax.swing.JMenuItem itemGraficoGastoExtra;
    private javax.swing.JMenuItem itemGraficoLenha;
    private javax.swing.JMenuItem itemMenuSair;
    private javax.swing.JMenuItem itemNovaTarefa;
    private javax.swing.JMenuItem itemNovoFornecedor;
    private javax.swing.JMenuItem itemNovoFuncionario;
    private javax.swing.JMenuItem itemNovoTijolo;
    private javax.swing.JMenuItem itemNovoUsuario;
    private javax.swing.JMenuItem itemRelatorioAgua;
    private javax.swing.JMenuItem itemRelatorioGastoTotal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JDesktopPane jdpAreaDeTrabalho;
    private javax.swing.JMenu mnuCadastros;
    private javax.swing.JMenu mnuFornecedor;
    private javax.swing.JMenu mnuFuncionario;
    private javax.swing.JMenu mnuLogin;
    private javax.swing.JMenu mnuOutros;
    private javax.swing.JMenu mnuProducao;
    private javax.swing.JMenu mnuTarefa;
    private javax.swing.JMenu mnuTijolo;
    // End of variables declaration//GEN-END:variables
}
