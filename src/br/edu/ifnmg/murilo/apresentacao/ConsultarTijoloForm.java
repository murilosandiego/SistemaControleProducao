/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.murilo.apresentacao;

import br.edu.ifnmg.murilo.entidade.Tijolo;
import br.edu.ifnmg.murilo.negocio.TijoloBO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author murilo
 */
public class ConsultarTijoloForm extends Tela {

    private List<Tijolo> tijolos;
    private CadastroTijoloForm novoTijoloForm;
    private CadastroTijoloForm editarTijoloForm;

    /**
     * Creates new form ConsultarTijoloForm
     */
    public ConsultarTijoloForm() {
        this.preparaTela();
    }

    private void preparaTela() {
        try {
            this.initComponents();
            this.carregarTabelaTijolos();
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Tijolos Cadastrados", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    public void carregarTabelaTijolos() throws SQLException {
        TijoloBO tijoloBO = new TijoloBO();
        this.tijolos = tijoloBO.buscarTodos();

        ModeloTabelaTijolo modelo = new ModeloTabelaTijolo();
        tblResultado.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Lista de Tijolos");

        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblResultado);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/cancel.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/pencil.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        this.exibirTelaCadastroTijolo();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        this.editarTijolo();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        this.excluirTijolo();
    }//GEN-LAST:event_btnExcluirActionPerformed
    
    private void exibirTelaCadastroTijolo() {

        if(this.novoTijoloForm == null){
            this.novoTijoloForm = new CadastroTijoloForm(this);
        }
        novoTijoloForm.setVisible(true);
        novoTijoloForm.toFront();
        
    }
    
    private void editarTijolo() {
        int linhaSelecionada = tblResultado.getSelectedRow();
        if(linhaSelecionada != -1){
            Tijolo tijolo = tijolos.get(linhaSelecionada);
            
            if(this.editarTijoloForm != null){
                this.editarTijoloForm.dispose();
            }
            this.editarTijoloForm= 
                    new CadastroTijoloForm(this, tijolo);
            this.editarTijoloForm.setVisible(true);
            
            
        }else{
            String mensagem = "Nenhum aluno selecionado.";
                JOptionPane.showMessageDialog(this,
                        mensagem,
                        "Edição de aluno",
                        JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void excluirTijolo(){
        try {
            int linhaSelecionada = tblResultado.getSelectedRow();
            if (linhaSelecionada != -1) {
                Tijolo tijoloSelecionado = tijolos.get(linhaSelecionada);

                int resposta;
                String mensagem = "Deseja excluir o Tijolo "
                        + tijoloSelecionado.getTipo()+ ")?";
                String titulo = "Exclusão de Tijolo";
                resposta = JOptionPane.showConfirmDialog(this,
                        mensagem, titulo, JOptionPane.YES_NO_OPTION);

                if (resposta == JOptionPane.YES_OPTION) {
                    TijoloBO tijoloBO = new TijoloBO();
                    tijoloBO.excluir(tijoloSelecionado.getId());
                    String mensagemSuceso = "Materia Prima "
                            + tijoloSelecionado.getTipo()
                            + "excluído com sucesso.";
                    JOptionPane.showMessageDialog(this,
                            mensagemSuceso, titulo,
                            JOptionPane.INFORMATION_MESSAGE);

                    this.carregarTabelaTijolos();
                }
            } else {
                String mensagem = "Nenhum fornecedor selecionado.";
                JOptionPane.showMessageDialog(this,
                        mensagem,
                        "Exclusão de fornecedor",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Exclusão de fornecedor", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }

    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResultado;
    // End of variables declaration//GEN-END:variables

    private class ModeloTabelaTijolo extends AbstractTableModel {

        @Override
        public String getColumnName(int coluna) {
            if (coluna == 0) {
                return "Tipo";
            } else if (coluna == 1) {
                return "Dimensões";
            } else if (coluna == 2) {
                return "Descrição";
            }else if (coluna == 3) {
                return "Valor de Venda do Milheiro";
            } else {
                return "Observações";
            }
        }

        @Override
        public int getRowCount() {
            return tijolos.size();
        }

        @Override
        public int getColumnCount() {
            return 5;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Tijolo tijolo = tijolos.get(rowIndex);
            if (columnIndex == 0) {
                return tijolo.getTipo();
            } else if (columnIndex == 1) {
                return tijolo.getDimensoes();
            } else if (columnIndex == 2) {
                return tijolo.getDescricao();
            }else if (columnIndex == 3) {
                return tijolo.getValorVenda();
            } else {
                return tijolo.getObservacoes();
            }
        }

    }

}
