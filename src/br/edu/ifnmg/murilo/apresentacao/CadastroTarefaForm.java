/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.murilo.apresentacao;

import br.edu.ifnmg.murilo.entidade.Tarefa;
import br.edu.ifnmg.murilo.excecao.CampoObrigatorioException;
import br.edu.ifnmg.murilo.excecao.SistemaControleProducaoException;
import br.edu.ifnmg.murilo.negocio.TarefaBO;
import javax.swing.JOptionPane;

/**
 *
 * @author murilo
 */
public class CadastroTarefaForm extends javax.swing.JFrame {

    private Tarefa tarefaEmEdicao;
    private boolean flagTarefaEmEdicao = false;
    private ConsultarTarefasForm consultarTarefasForm;

    /**
     * Creates new form CadastroTarefaForm
     */
    public CadastroTarefaForm() {
        tarefaEmEdicao = new Tarefa();
        this.preparaTela();
    }

    public CadastroTarefaForm(ConsultarTarefasForm consultarTarefa, Tarefa tarefaParaEdicao) {
        this.consultarTarefasForm = consultarTarefa;
        this.tarefaEmEdicao = tarefaParaEdicao;
        this.flagTarefaEmEdicao = true;
        this.preparaTela();
        this.inicializaCamposTela();
        this.txtNome.setEnabled(false);
    }

    public CadastroTarefaForm(ConsultarTarefasForm consultarTarefasForm) {
        this.consultarTarefasForm = consultarTarefasForm;
        this.tarefaEmEdicao = new Tarefa();
        this.preparaTela();
    }

    private void inicializaCamposTela() {
        txtDescricoes.setText(this.tarefaEmEdicao.getDescricao());
        txtNome.setText(this.tarefaEmEdicao.getNome());
        txtObservacao.setText(this.tarefaEmEdicao.getObservacao());
        txtValorDiaria.setText(String.valueOf(this.tarefaEmEdicao.getValorDiaria()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void preparaTela() {
        try {
            this.initComponents();
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Cadastro de Tarefas", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void validaCamposObrigatorios() {
        if (txtDescricoes.getText().trim().isEmpty()
                || txtNome.getText().trim().isEmpty()
                || txtValorDiaria.getText().trim().isEmpty()) {
            throw new CampoObrigatorioException();
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblDescricao = new javax.swing.JLabel();
        txtDescricoes = new javax.swing.JTextField();
        lblObservacao = new javax.swing.JLabel();
        txtObservacao = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        lblValorDiaria = new javax.swing.JLabel();
        txtValorDiaria = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Tarefas");
        setLocationByPlatform(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tarefa"));

        lblNome.setText("Nome*:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblDescricao.setText("Descrição*:");

        lblObservacao.setText("Observação:");

        txtObservacao.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtObservacao.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/murilo/apresentacao/imagens/disk.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lblValorDiaria.setText("Valor Diária*:");

        txtValorDiaria.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtValorDiaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorDiariaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNome, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescricoes, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 510, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValorDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNome)
                            .addComponent(lblDescricao)
                            .addComponent(lblValorDiaria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblObservacao)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtObservacao))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescricoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblObservacao)
                    .addComponent(lblValorDiaria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (this.flagTarefaEmEdicao == false) {
            this.salvarTarefa();
        } else {
            this.editarTarefa();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtValorDiariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorDiariaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorDiariaActionPerformed

    private void salvarTarefa() {
        try {
            this.verificaCamposObrigatorios();
            this.recuperaCamposTela();
            TarefaBO tarefaBO = new TarefaBO();
            tarefaBO.inserir(tarefaEmEdicao);

            JOptionPane.showMessageDialog(this, "Fornecedor cadastrado com sucesso!", "Cadastro de fornecedor", JOptionPane.INFORMATION_MESSAGE);
            this.limpaCamposTela();
            if (consultarTarefasForm != null) {
                this.consultarTarefasForm.carregarTabelaTarefas();
            }
        } catch (SistemaControleProducaoException e) {
            String mensagem = "Erro ao realizar operação:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Cadastro de Tarefa", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {

            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Cadastro de Tarefa", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void editarTarefa() {
        try {
            this.verificaCamposObrigatorios();
            this.recuperaCamposTela();

            TarefaBO tarefaBO = new TarefaBO();
            tarefaBO.atualizar(this.tarefaEmEdicao);

            JOptionPane.showMessageDialog(this, "Tijolo editado com sucesso!", "Cadastro de Tijolo", JOptionPane.INFORMATION_MESSAGE);
            this.consultarTarefasForm.carregarTabelaTarefas();
            dispose();
        } catch (SistemaControleProducaoException e) {
            String mensagem = "Erro ao realizar operação:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Cadastro de Tarefa", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Cadastro de fonecedor", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void recuperaCamposTela() {

        this.tarefaEmEdicao.setNome(txtNome.getText());
        this.tarefaEmEdicao.setObservacao(txtObservacao.getText());
        this.tarefaEmEdicao.setValorDiaria(Double.parseDouble(txtValorDiaria.getText()));
        this.tarefaEmEdicao.setDescricao(txtDescricoes.getText());
    }

    private void verificaCamposObrigatorios() {
        if (txtDescricoes.getText().trim().isEmpty()
                || txtNome.getText().trim().isEmpty()
                || txtValorDiaria.getText().trim().isEmpty()) {
            throw new CampoObrigatorioException();
        }
    }

    private void limpaCamposTela() {
        txtDescricoes.setText("");
        txtNome.setText("");
        txtObservacao.setText("");
        txtValorDiaria.setText("");
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblObservacao;
    private javax.swing.JLabel lblValorDiaria;
    private javax.swing.JTextField txtDescricoes;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtObservacao;
    private javax.swing.JFormattedTextField txtValorDiaria;
    // End of variables declaration//GEN-END:variables
}
